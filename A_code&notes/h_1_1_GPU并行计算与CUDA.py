# -*-coding:utf-8-*-


"""
CUDA(Compute Unified Device Architecture（计算机统一设备架构）) 即统一计算架构，是英伟达（NVIDIA）公司推出的并行计算平台。
CUDA采用了一种简单的数据并行模型，再结合编程模型，从而无须操纵复杂的图形基元。
"""
"""
把冯·诺依曼:抛弃十进制，采用二进制作为数字计算机的数制基础
体系结构：
（1）采用存储程序方式，指令和数据没有区别，数据和程序在内存中是没有区别的，它们都是内存中的数据，当EIP指针指向哪，CPU就加载哪段内存中的数据
（2）存储器是按地址访问的线性编址的一维结构进行单元划分，每个单元的位数是固定的。
（3）指令由操作码和地址组成。
（4）通过执行指令直接发出控制信号控制计算机的操作。
（5）以运算器为中心，I/O设备与存储器间的数据传送都要经过运算器。
（6）数据以二进制表示

计算机的5大组件：运算器、控制器、存储器、输入设备、输出设备
"""

"""
NVIDIA采用了两种关键技术——G80统一图形及计算架构和CUDA
G80标量流处理器架构的诞生使得全新的GPU计算成为可能

NVIDIA五大产品系
GeForce、Tegra、ION、Quadro、Tesla

CUDA不只是一种编程语言，它包括NVIDIA对于GPGPU的完整的解决方案：
从支持通用计算并行架构的GPU，到实现计算所需要的硬件驱动程序、编程接口、程序库、编译器、调试器等。
"""
"""
GPU相对于CPU而言，GPU使显卡减少了对CPU的依赖，并分担了部分原本属于CPU的工作（主要是并行计算部分）。
GPU具有强大的浮点数编程和计算能力，在计算吞吐量和内存带宽上，GPU远远超过CPU。
"""

"""
NVIDIA主要以SM为运算和调度的基本单元。
在 NVIDIA 的设计里，多个小核心组成一个Streaming Multiprocessor（SM），一张GPU卡有多个SM。
"""
"""
CPU和GPU的区别
CPU的结构主要包括运算器（Arithmetic and Logic Unit，ALU）、控制单元（Control Unit，CU）、寄存器（Register）、高速缓存器（Cache）和它们之间通信的数据、控制及状态总线。

CPU擅长执行像操作系统、系统软件和通用应用程序这类拥有复杂指令调度、循环、分支、逻辑判断及执行等的程序任务。
GPU由数量众多的计算单元和超长的流水线组成，适合处理大量类型统一的数据。但GPU无法单独工作，必须由CPU进行控制及调用才能工作。
与CPU相比，GPU中有很多运算器ALU和很少缓存Cache，缓存的目的不是保存后面需要访问的数据，而是为线程threadᨀ高服务。

GPU是以大量线程实现面向吞吐量的数据并行计算，适合于处理计算密度高、逻辑分支简单的大规模数据并行负载。
而CPU则有复杂的控制逻辑和大容量的缓存从而减小延迟，擅长复杂逻辑运算
"""

"""
GPU的优势：
（1）高带宽的内存：CPU基于延迟优化（跑车），GPU基于带宽优化（卡车）
（2）多线程并行下的内存访问隐藏延迟
（3）数量多且速度快的可调整的寄存器和L1缓存：所有被执行的计算都在寄存器中发生，寄存器直接连接着执行单
            元（一个核心CPU和一连串的GPU处理器）。GPU有许多处理单元（SM，流处理器），且每个处理单元中都有一组寄存器，这样，GPU就有着大
            量体积小、处理速度快的寄存器，这也是GPU的优点。

"""

















